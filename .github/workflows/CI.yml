name: Entrega-Continua
on:
  push:
    branches:
      - main

env:
  IMAGEM_NAME: trade
  TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
  TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
  REDIS_HOST: ${{ secrets.REDIS_HOST }}


jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Cache do Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven        

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Build with Maven
        run: mvn clean verify

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: target/site/jacoco/jacoco.xml
          flags: unittests
          name: codecov-coverage
          # para comentar nos PRs automaticamente:
          fail_ci_if_error: true
          verbose: true
          plugins: github-pr-comment

#      - name: Verificar vulnerabilidades com OWASP (via Maven)
#        run: mvn org.owasp:dependency-check-maven:check
#
#      - name: Publicar relat√≥rio OWASP
#        uses: actions/upload-artifact@v4
#        with:
#          name: dependency-check-report
#          path: target/dependency-check-report.html

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Gerando a Tag
        id: tagging
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGEM_NAME }}:${{ steps.tagging.outputs.new_version }}, ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGEM_NAME }}:latest
